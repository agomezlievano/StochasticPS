nn <- 100
mm <- 500
M <- matrix(0, nrow = nn, ncol=mm)
seq(nn,1,by = 1)
seq(nn,1,by = -1)
nn <- 100
mm <- 500
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn,1,by = -1)){
xii <- rbinom(mm, size=mm, prob=ii/mm)
M[ii,] <- xii
}
nn <- 100
mm <- 500
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn,1,by = -1)){
xii <- sort(rbinom(mm, size=mm, prob=ii/mm),decreasing = TRUE)
M[ii,] <- xii
}
# Libraries
library(ellipse)
library(RColorBrewer)
# Use of the mtcars data proposed by R
data=cor(M)
library(corrplot)
corrplot(data, method = "color", outline = T,
addgrid.col = "darkgray", order="hclust",
addrect = 4, rect.col = "black", rect.lwd = 5,
cl.pos = "b", tl.col = "indianred4", tl.cex = 0.8, tl.pos = "l",
cl.cex = 1.5, addCoef.col = "white", number.digits = 2,
number.cex = 0.75, col = colorRampPalette(c("darkred","white","midnightblue"))(100))
nn <- 100
mm <- 500
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn,1,by = -1)){
xii <- sort(rbinom(mm, size=mm, prob=ii/mm) + rnorm(mm, mean = 0, sd=0.01),decreasing = TRUE)
M[ii,] <- xii
}
# Libraries
library(pheatmap)
pheatmap(M, cluster_rows = FALSE, cluster_cols = FALSE)
nn <- 100
mm <- 500
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn,1,by = -1)){
xii <- sort(rbinom(mm, size=1, prob=ii/mm) + rnorm(mm, mean = 0, sd=0.01),decreasing = TRUE)
M[ii,] <- xii
}
M[1:10, 1:10]
nn <- 100
mm <- 500
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn,1,by = -1)){
xii <- round(sort(rbinom(mm, size=1, prob=ii/mm) + rnorm(mm, mean = 0.1, sd=0.01),decreasing = TRUE))
M[ii,] <- xii
}
M[1:10, 1:10]
nn <- 5
mm <- 8
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn, 1, by = -1)){
xii <- round(sort(rbinom(mm, size=1, prob=ii/mm) + rnorm(mm, mean = 0.1, sd=0.01),decreasing = TRUE))
M[ii,] <- xii
}
M
ii/mm
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
ii <- nn
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
rbinom(mm, size=1, prob=ii/mm)
round(sort(rbinom(mm, size=1, prob=ii/mm) + rnorm(mm, mean = 0.1, sd=0.01),decreasing = TRUE))
round(sort(rbinom(mm, size=1, prob=ii/mm) + rnorm(mm, mean = 0.1, sd=0.01),decreasing = TRUE))
round(sort(rbinom(mm, size=1, prob=ii/mm) + rnorm(mm, mean = 0.1, sd=0.01),decreasing = TRUE))
round(sort(rbinom(mm, size=1, prob=ii/mm) + rnorm(mm, mean = 0.1, sd=0.01),decreasing = TRUE))
round(sort(rbinom(mm, size=1, prob=ii/mm) + rnorm(mm, mean = 0.1, sd=0.01),decreasing = TRUE))
round(sort(rbinom(mm, size=1, prob=ii/mm) + rnorm(mm, mean = 0.1, sd=0.01),decreasing = TRUE))
round(sort(rbinom(mm, size=1, prob=ii/mm) + rnorm(mm, mean = 0.1, sd=0.01),decreasing = TRUE))
round(sort(rbinom(mm, size=1, prob=ii/mm) + rnorm(mm, mean = 0.1, sd=0.01),decreasing = TRUE))
round(sort(rbinom(mm, size=1, prob=ii/mm) + rnorm(mm, mean = 0.1, sd=0.01),decreasing = TRUE))
nn <- 100
mm <- 800
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn, 1, by = -1)){
xii <- round(sort(rbinom(mm, size=1, prob=ii/mm) + rnorm(mm, mean = 0.1, sd=0.01),decreasing = TRUE))
M[nn-ii+1,] <- xii
}
M[1:10, 1:10]
pheatmap(M, cluster_rows = FALSE, cluster_cols = FALSE)
nn <- 100
mm <- 800
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn, 1, by = -1)){
xii <- sort(rbinom(mm, size=1, prob=ii/mm),decreasing = TRUE)
M[nn-ii+1,] <- round(xii + rnorm(mm, mean = 0.8, sd=0.01))
}
M[1:10, 1:10]
# Libraries
library(pheatmap)
library(ellipse)
library(RColorBrewer)
pheatmap(M, cluster_rows = FALSE, cluster_cols = FALSE)
nn <- 100
mm <- 800
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn, 1, by = -1)){
xii <- sort(rbinom(mm, size=1, prob=ii/mm),decreasing = TRUE)
M[nn-ii+1,] <- xii + floor(runif(mm, 0, 1) + 0.1)
}
M[1:10, 1:10]
# Libraries
library(pheatmap)
library(ellipse)
library(RColorBrewer)
pheatmap(M, cluster_rows = FALSE, cluster_cols = FALSE)
nn <- 100
mm <- 800
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn, 1, by = -1)){
xii <- sort(rbinom(mm, size=1, prob=ii/nn),decreasing = TRUE)
M[nn-ii+1,] <- xii + floor(runif(mm, 0, 1) + 0.1)
}
M[1:10, 1:10]
# Libraries
library(pheatmap)
library(ellipse)
library(RColorBrewer)
pheatmap(M, cluster_rows = FALSE, cluster_cols = FALSE)
# Use of the mtcars data proposed by R
data=cor(t(M))
corrplot(data, method = "color", #outline = T,
addgrid.col = "darkgray", order="hclust",
addrect = 4, rect.col = "black", rect.lwd = 5,
cl.pos = "b", tl.col = "indianred4", tl.cex = 0.8, tl.pos = "l",
cl.cex = 1.5, addCoef.col = "white", number.digits = 2,
number.cex = 0.75, col = colorRampPalette(c("darkred","white","midnightblue"))(100))
corrplot(data)
corrplot(data, method="color")
div <- rowSums(M)
ubi <- colSums(M)
# Libraries
library(pheatmap)
library(ellipse)
library(RColorBrewer)
nn <- 100
mm <- 800
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn, 1, by = -1)){
xii <- sort(rbinom(mm, size=1, prob=ii/nn),decreasing = TRUE)
M[nn-ii+1,] <- xii + floor(runif(mm, 0, 1) + 0.1)
}
M[1:10, 1:10]
div <- rowSums(M)
ubi <- colSums(M)
Mordered <- M[order(-div), order(ubi)]
pheatmap(Mordered, cluster_rows = FALSE, cluster_cols = FALSE)
pheatmap(Mordered, cluster_rows = FALSE, cluster_cols = FALSE,
color = colorRampPalette(c("darkred","white","midnightblue"))(3))
pheatmap(Mordered, cluster_rows = FALSE, cluster_cols = FALSE,
color = colorRampPalette(c("white","gray60","gray20"))(3))
# Libraries
library(pheatmap)
library(ellipse)
library(RColorBrewer)
nn <- 100
mm <- 800
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn, 1, by = -1)){
xii <- sort(rbinom(mm, size=1, prob=ii/nn),decreasing = TRUE)
M[nn-ii+1,] <- floor((xii + floor(runif(mm, 0, 1)+0.1) + 1.01)/2)
}
M[1:10, 1:10]
div <- rowSums(M)
ubi <- colSums(M)
Mordered <- M[order(-div), order(-ubi)]
pheatmap(Mordered, cluster_rows = FALSE, cluster_cols = FALSE,
color = colorRampPalette(c("white","gray60","gray20"))(3))
# Libraries
library(pheatmap)
library(ellipse)
library(RColorBrewer)
nn <- 100
mm <- 800
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn, 1, by = -1)){
xii <- sort(rbinom(mm, size=1, prob=ii/nn),decreasing = TRUE)
M[nn-ii+1,] <- floor((xii + floor(runif(mm, 0, 1)+0.1) + 1.01)/2)
}
M <- floor( (M + matrix(floor(runif(nn*mm, 0, 1)+0.1), nrow=nn, ncol=mm) + 1.01)/2)
div <- rowSums(M)
ubi <- colSums(M)
Mordered <- M[order(-div), order(-ubi)]
pheatmap(Mordered, cluster_rows = FALSE, cluster_cols = FALSE,
color = colorRampPalette(c("white","gray60","gray20"))(3))
# Use of the mtcars data proposed by R
data=cor(t(Mordered))
Mordered[1:10, 1:10]
# Libraries
library(pheatmap)
library(ellipse)
library(RColorBrewer)
nn <- 200
mm <- 1000
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn, 1, by = -1)){
xii <- sort(rbinom(mm, size=1, prob=ii/nn),decreasing = TRUE)
M[nn-ii+1,] <- floor((xii + floor(runif(mm, 0, 1)+0.1) + 1.01)/2)
}
M <- floor( (M + matrix(floor(runif(nn*mm, 0, 1)+0.1), nrow=nn, ncol=mm) + 1.01)/2) + matrix(rnorm(nn*mm, 0, 0.01), nrow=nn, ncol=mm,)
div <- rowSums(M)
ubi <- colSums(M)
Mordered <- M[order(-div), order(-ubi)]
pheatmap(Mordered, cluster_rows = FALSE, cluster_cols = FALSE,
color = colorRampPalette(c("white","gray60","gray20"))(3))
# Libraries
library(pheatmap)
library(ellipse)
library(RColorBrewer)
nn <- 200
mm <- 1000
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn, 1, by = -1)){
xii <- sort(rbinom(mm, size=1, prob=ii/nn),decreasing = TRUE)
M[nn-ii+1,] <- floor((xii + floor(runif(mm, 0, 1)+0.1) + 1.01)/2)
}
M <- floor( (M + matrix(floor(runif(nn*mm, 0, 1)+0.1), nrow=nn, ncol=mm) + 1.01)/2) + matrix(rnorm(nn*mm, 0, 0.01), nrow=nn, ncol=mm,)
div <- rowSums(M)
ubi <- colSums(M)
Mordered <- M[order(-div), order(-ubi)]
pheatmap(Mordered, cluster_rows = FALSE, cluster_cols = FALSE,
color = colorRampPalette(c("white","gray60","gray20"))(5))
# Use of the mtcars data proposed by R
data=cor(t(Mordered))
corrplot(data, method = "color")
# Libraries
library(pheatmap)
library(ellipse)
library(RColorBrewer)
nn <- 200
mm <- 200
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn, 1, by = -1)){
#xii <- sort(rbinom(mm, size=1, prob=ii/nn),decreasing = TRUE)
#M[nn-ii+1,] <- floor((xii + floor(runif(mm, 0, 1)+0.1) + 1.01)/2)
xii <- c(rep(1, ii), rep(0, mm-ii))
M[nn-ii+1,] <- xii
}
div <- rowSums(M)
ubi <- colSums(M)
Mordered <- M[order(-div), order(-ubi)]
pheatmap(Mordered, cluster_rows = FALSE, cluster_cols = FALSE,
color = colorRampPalette(c("white","gray60","gray20"))(5))
# Use of the mtcars data proposed by R
data=cor(t(Mordered))
nn <- 200
mm <- 201
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn, 1, by = -1)){
#xii <- sort(rbinom(mm, size=1, prob=ii/nn),decreasing = TRUE)
#M[nn-ii+1,] <- floor((xii + floor(runif(mm, 0, 1)+0.1) + 1.01)/2)
xii <- c(rep(1, ii), rep(0, mm-ii))
M[nn-ii+1,] <- xii
}
div <- rowSums(M)
ubi <- colSums(M)
Mordered <- M[order(-div), order(-ubi)]
pheatmap(Mordered, cluster_rows = FALSE, cluster_cols = FALSE,
color = colorRampPalette(c("white","gray60","gray20"))(5))
# Use of the mtcars data proposed by R
data=cor(t(Mordered))
corrplot(data, method = "color")
cs <- colSums(data)
C <- data/cs
colSums(C)
rowSums(C)
C <- t(t(data)/cs)
colSums(C)
res <- eigen(C)
res$values
round(res$values, 3)
round(res$vectors[,c(1:3)], 3)
res <- eigen(t(C))
round(res$values, 3)
round(res$vectors[,c(1:3)], 3)
div
eci <- res$vectors[,2]
plot(div, eci)
nn <- 50
mm <- 51
M <- matrix(0, nrow = nn, ncol=mm)
for(ii in seq(nn, 1, by = -1)){
#xii <- sort(rbinom(mm, size=1, prob=ii/nn),decreasing = TRUE)
#M[nn-ii+1,] <- floor((xii + floor(runif(mm, 0, 1)+0.1) + 1.01)/2)
xii <- c(rep(1, ii), rep(0, mm-ii))
M[nn-ii+1,] <- xii
}
div <- rowSums(M)
ubi <- colSums(M)
Mordered <- M[order(-div), order(-ubi)]
pheatmap(Mordered, cluster_rows = FALSE, cluster_cols = FALSE,
color = colorRampPalette(c("white","gray60","gray20"))(5))
# Use of the mtcars data proposed by R
data=cor(t(Mordered))
corrplot(data, method = "color")
cs <- colSums(data)
C <- t(t(data)/cs)
colSums(C)
res <- eigen(t(C))
round(res$values, 3)
round(res$vectors[,c(1:3)], 3)
eci <- res$vectors[,2]
div
plot(div, eci)
div2use <- rowSums(Mordered)
div2use[div==0] <- 1
ubi2use <- colSums(Mordered)
ubi2use[ubi==0] <- 1
Ctrue <- diag(1/div2use) %*% Mordered %*% diag(1/ubi2use) %*% t(Mordered)
Ctrue <- diag(1/div2use) %*% Mordered %*% diag(1/ubi2use) %*% t(Mordered)
restrue <- eigen(t(Ctrue))
round(restrue$values, 3)
round(restrue$vectors[,c(1:3)], 3)
ecitrue <- restrue$vectors[,2]
plot(eci, ecitrue)
colSums(Ctrue)
rowSums(Ctrue)
plot(div, ecitrue)
restrue <- eigen(Ctrue)
round(restrue$values, 3)
round(restrue$vectors[,c(1:3)], 3)
ecitrue <- restrue$vectors[,2]
plot(eci, ecitrue)
